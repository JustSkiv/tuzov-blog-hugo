[{"categories":["Development"],"content":"На работе я постоянно агитирую за хорошее оформление Pull Request’ов и git-коммитов. При этом, я часто встречаюсь с непониманием со стороны коллег. Один из наиболее популярных вопросов: Зачем заморачиваться с оформлением PRов и коммитов, если можно просто указать номер задачи в баг-трэкере? Ведь в задаче уже описана проблема. Далее будет развёрнутый ответ на этот вопрос. Примечание: Всё описанное ниже касается и PRов, и коммитов. Я вообще долгое время работал с Gerrit (opens new window), где PR == коммит. Таким образом, если вы хорошо оформили PR, стоит позаботиться, чтобы после его мержа он превратился в хорошо оформленный коммит. Эта проблема особенно актуальна, если вы работаете с GitLab или BitBucket, которые любят сквошить изменения в коммит с описанием “Merge PR #123”. ","date":"2022-08-24","objectID":"/posts/%D0%BF%D0%BE%D1%87%D0%B5%D0%BC%D1%83-%D0%B2%D0%B0%D0%B6%D0%BD%D0%BE-%D1%85%D0%BE%D1%80%D0%BE%D1%88%D0%BE-%D0%BE%D1%84%D0%BE%D1%80%D0%BC%D0%BB%D1%8F%D1%82%D1%8C-pull-request-%D1%8B-%D0%B8-%D0%BA%D0%BE%D0%BC%D0%BC%D0%B8%D1%82%D1%8B/:0:0","tags":["Git","Pull Requests"],"title":"Почему важно хорошо оформлять Pull Request'ы и коммиты","uri":"/posts/%D0%BF%D0%BE%D1%87%D0%B5%D0%BC%D1%83-%D0%B2%D0%B0%D0%B6%D0%BD%D0%BE-%D1%85%D0%BE%D1%80%D0%BE%D1%88%D0%BE-%D0%BE%D1%84%D0%BE%D1%80%D0%BC%D0%BB%D1%8F%D1%82%D1%8C-pull-request-%D1%8B-%D0%B8-%D0%BA%D0%BE%D0%BC%D0%BC%D0%B8%D1%82%D1%8B/"},{"categories":["Development"],"content":"Разберем задачу Часто фэйлится запрос ‘/some/request’ - вместо ответа возвращает ошибку с текстом “ERROR”. Разработчик изучил код и понял, что проблема в слишком маленьком таймауте - он убедился: что запрос в среднем отрабатывает не 1 сек, а 3 сек что для данного запроса это нормально и внес изменения: conf := Config { someRequestTimeout: 1 * time.Second, // ... } Заменил на: conf := Config { someRequestTimeout: 3 * time.Second, // ... } Автор решил, что изменение слишком маленькое, чтобы его комментировать - ведь изменился всего один символ и суть изменения очевидна. Он оставил такое описание к своему PR: [TEAM-1234] fix failed request Далее PR уходит на code review. ","date":"2022-08-24","objectID":"/posts/%D0%BF%D0%BE%D1%87%D0%B5%D0%BC%D1%83-%D0%B2%D0%B0%D0%B6%D0%BD%D0%BE-%D1%85%D0%BE%D1%80%D0%BE%D1%88%D0%BE-%D0%BE%D1%84%D0%BE%D1%80%D0%BC%D0%BB%D1%8F%D1%82%D1%8C-pull-request-%D1%8B-%D0%B8-%D0%BA%D0%BE%D0%BC%D0%BC%D0%B8%D1%82%D1%8B/:1:0","tags":["Git","Pull Requests"],"title":"Почему важно хорошо оформлять Pull Request'ы и коммиты","uri":"/posts/%D0%BF%D0%BE%D1%87%D0%B5%D0%BC%D1%83-%D0%B2%D0%B0%D0%B6%D0%BD%D0%BE-%D1%85%D0%BE%D1%80%D0%BE%D1%88%D0%BE-%D0%BE%D1%84%D0%BE%D1%80%D0%BC%D0%BB%D1%8F%D1%82%D1%8C-pull-request-%D1%8B-%D0%B8-%D0%BA%D0%BE%D0%BC%D0%BC%D0%B8%D1%82%D1%8B/"},{"categories":["Development"],"content":"Code Review На ревью пришел другой разработчик, который не знает контекст модуля / проекта. Должен ли он поставить апрув? Для этого ему необходимо разобраться: почему раньше таймаут был 1 сек? почему теперь 3 сек? Почему не 5? можно ли было оптимизировать код и не повышать таймаут? И т.п. И все эти вопросы отпали бы сами собой, если бы описание было хорошим. Например, таким: Good [TEAM-1234] increase /some/request timeout up to 3 seconds Таймаут запроса xxx был увеличен до трех секунд, так как теперь он обращается к внешнему сервису google.com/bigquery для отправки данных об операции и не укладывается в прежнее значение. Тестирование показало, что все запросы укладываются в три секунды и это не приводит к общему снижению качества работы сервиса. До тех пор, пока время запроса укладывается в 3 секунды, проще оставить синхронную отправку данных в bigquery. Примечание: тут для удобства текст написан на русском, но в историю гита лучше писать на английском - это касается коммитов (в PRах обычно можно и на русском). Также здесь опущено правильное форматирование commit-message. ","date":"2022-08-24","objectID":"/posts/%D0%BF%D0%BE%D1%87%D0%B5%D0%BC%D1%83-%D0%B2%D0%B0%D0%B6%D0%BD%D0%BE-%D1%85%D0%BE%D1%80%D0%BE%D1%88%D0%BE-%D0%BE%D1%84%D0%BE%D1%80%D0%BC%D0%BB%D1%8F%D1%82%D1%8C-pull-request-%D1%8B-%D0%B8-%D0%BA%D0%BE%D0%BC%D0%BC%D0%B8%D1%82%D1%8B/:2:0","tags":["Git","Pull Requests"],"title":"Почему важно хорошо оформлять Pull Request'ы и коммиты","uri":"/posts/%D0%BF%D0%BE%D1%87%D0%B5%D0%BC%D1%83-%D0%B2%D0%B0%D0%B6%D0%BD%D0%BE-%D1%85%D0%BE%D1%80%D0%BE%D1%88%D0%BE-%D0%BE%D1%84%D0%BE%D1%80%D0%BC%D0%BB%D1%8F%D1%82%D1%8C-pull-request-%D1%8B-%D0%B8-%D0%BA%D0%BE%D0%BC%D0%BC%D0%B8%D1%82%D1%8B/"},{"categories":["Development"],"content":"Что это даёт Во время ревью: Помогает убедиться в корректности и оптимальности решения Экономит время ревьюера После ревью: история гита позволит быстро понять, почему тут было решено указать именно 3 секунды. Далее подробнее про эти пункты. ","date":"2022-08-24","objectID":"/posts/%D0%BF%D0%BE%D1%87%D0%B5%D0%BC%D1%83-%D0%B2%D0%B0%D0%B6%D0%BD%D0%BE-%D1%85%D0%BE%D1%80%D0%BE%D1%88%D0%BE-%D0%BE%D1%84%D0%BE%D1%80%D0%BC%D0%BB%D1%8F%D1%82%D1%8C-pull-request-%D1%8B-%D0%B8-%D0%BA%D0%BE%D0%BC%D0%BC%D0%B8%D1%82%D1%8B/:3:0","tags":["Git","Pull Requests"],"title":"Почему важно хорошо оформлять Pull Request'ы и коммиты","uri":"/posts/%D0%BF%D0%BE%D1%87%D0%B5%D0%BC%D1%83-%D0%B2%D0%B0%D0%B6%D0%BD%D0%BE-%D1%85%D0%BE%D1%80%D0%BE%D1%88%D0%BE-%D0%BE%D1%84%D0%BE%D1%80%D0%BC%D0%BB%D1%8F%D1%82%D1%8C-pull-request-%D1%8B-%D0%B8-%D0%BA%D0%BE%D0%BC%D0%BC%D0%B8%D1%82%D1%8B/"},{"categories":["Development"],"content":"Проверка корректности и оптимальности решения Глядя на такое описание, ревьюер сразу понимает корни проблемы, понимает почему было принято именно такое решение. Далее он либо ставит апрув, либо оспаривает решение - например: указывает автору на какую-то простую оптимизацию, которая сократит время выполнения запроса подсказывает, что автор чего-то не учел, и лучше поставить таймаут чуть больше / чуть меньше. а может проблема вообще не в таймауте, и автор ошибся? Самое главное: в этом и только в этом случае ревьюер может оспорить решение без изучения кода и не зная контекста. Если же описания нет, то всё что видит ревьюер: “проблема - запрос возвращает ошибку” “решение - увеличиваем таймаут” Почему автор увеличил таймаут? Он внимательно всё проанализировал? Или же просто увидел, что проблема в таймауте и решил его увеличить? Как он понял, что 3-х секунд будет достаточно? А может 1 секунда - это вообще был баг? Пытался ли автор оптимизировать код? И т.п. А что если автор вообще ошибся и перепутал задачку? Он думал, что решает задачку TEAM-1235, но опечатался и указал TEAM-1234. И фиксил он падающие тесты в соседнем файле. Ревьюер же сам додумал, что это фикс падающего запроса и тыкнул апрув. ","date":"2022-08-24","objectID":"/posts/%D0%BF%D0%BE%D1%87%D0%B5%D0%BC%D1%83-%D0%B2%D0%B0%D0%B6%D0%BD%D0%BE-%D1%85%D0%BE%D1%80%D0%BE%D1%88%D0%BE-%D0%BE%D1%84%D0%BE%D1%80%D0%BC%D0%BB%D1%8F%D1%82%D1%8C-pull-request-%D1%8B-%D0%B8-%D0%BA%D0%BE%D0%BC%D0%BC%D0%B8%D1%82%D1%8B/:3:1","tags":["Git","Pull Requests"],"title":"Почему важно хорошо оформлять Pull Request'ы и коммиты","uri":"/posts/%D0%BF%D0%BE%D1%87%D0%B5%D0%BC%D1%83-%D0%B2%D0%B0%D0%B6%D0%BD%D0%BE-%D1%85%D0%BE%D1%80%D0%BE%D1%88%D0%BE-%D0%BE%D1%84%D0%BE%D1%80%D0%BC%D0%BB%D1%8F%D1%82%D1%8C-pull-request-%D1%8B-%D0%B8-%D0%BA%D0%BE%D0%BC%D0%BC%D0%B8%D1%82%D1%8B/"},{"categories":["Development"],"content":"Экономия времени ревьюера Далее простая математика. Сколько времени понадобится на составление такого описания? Допустим, минут 5-10. Сколько ревьюеру понадобится на изучение сути правок без описания, если он не знаком с контекстом? На мой взгляд - примерно столько же, сколько ушло у автора PRа после того как он понял, что проблема в таймауте. Чтобы убедиться в корректности решения, ревьюер должен проделать те же умозаключения, что и автор: достаточно ли 3х секунд? стоит ли оптимизировать? и т.п. Если у автора ушел на это час, то и ревьюер потратит примерно час. Да, ревьюер может сократить это время, выяснив всё у автора лично. Но тогда автор потратит на ответ примерно столько же времени, сколько потратил бы на составление нормального описания. Плюс он отвлекается от важной задачи, затягивает время ревью, отнимает время ревьюера. Теперь умножаем проблемы одного ревьюера на количество ревьюеров - ведь в у PRов часто несколько ревьюеров. Также учитываем ценность времени ревьюера - код мог писать джун / мидл, а ревьюить - тимлид / архитектор. ","date":"2022-08-24","objectID":"/posts/%D0%BF%D0%BE%D1%87%D0%B5%D0%BC%D1%83-%D0%B2%D0%B0%D0%B6%D0%BD%D0%BE-%D1%85%D0%BE%D1%80%D0%BE%D1%88%D0%BE-%D0%BE%D1%84%D0%BE%D1%80%D0%BC%D0%BB%D1%8F%D1%82%D1%8C-pull-request-%D1%8B-%D0%B8-%D0%BA%D0%BE%D0%BC%D0%BC%D0%B8%D1%82%D1%8B/:3:2","tags":["Git","Pull Requests"],"title":"Почему важно хорошо оформлять Pull Request'ы и коммиты","uri":"/posts/%D0%BF%D0%BE%D1%87%D0%B5%D0%BC%D1%83-%D0%B2%D0%B0%D0%B6%D0%BD%D0%BE-%D1%85%D0%BE%D1%80%D0%BE%D1%88%D0%BE-%D0%BE%D1%84%D0%BE%D1%80%D0%BC%D0%BB%D1%8F%D1%82%D1%8C-pull-request-%D1%8B-%D0%B8-%D0%BA%D0%BE%D0%BC%D0%BC%D0%B8%D1%82%D1%8B/"},{"categories":["Development"],"content":"Бонусы после ревью Допустим, через пару месяцев после мержа PRа в конфиг заглядывает другой разработчик и пытается понять, почему тут именно 3 секунды, а не 1, как раньше? Он смотрит git blame и далее сталкивается ровно с теми же проблемами, что и ревьюер - они либо видит “фикс такой-то задачи”, либо подробный текст с объяснением решения. В случае последнего ему не требуется искать в баг-трекере эту задачу, писать автору PRа и т.п. Дополнительные риски: Задачка в баг-трекере может потеряться (удалили, отредактировали, переехали на другой багтрэкер и др.) Задачка в баг-трекере может быть оформлена примерно также, как сам PR - без подробностей. Либо подробности в каких-то других задачах (выше по цепочке подзадач), либо вообще в отдельном документе в Confluence. Всё это я встречаю регулярно. Автор PRа мог уволиться или просто забыть контекст ","date":"2022-08-24","objectID":"/posts/%D0%BF%D0%BE%D1%87%D0%B5%D0%BC%D1%83-%D0%B2%D0%B0%D0%B6%D0%BD%D0%BE-%D1%85%D0%BE%D1%80%D0%BE%D1%88%D0%BE-%D0%BE%D1%84%D0%BE%D1%80%D0%BC%D0%BB%D1%8F%D1%82%D1%8C-pull-request-%D1%8B-%D0%B8-%D0%BA%D0%BE%D0%BC%D0%BC%D0%B8%D1%82%D1%8B/:3:3","tags":["Git","Pull Requests"],"title":"Почему важно хорошо оформлять Pull Request'ы и коммиты","uri":"/posts/%D0%BF%D0%BE%D1%87%D0%B5%D0%BC%D1%83-%D0%B2%D0%B0%D0%B6%D0%BD%D0%BE-%D1%85%D0%BE%D1%80%D0%BE%D1%88%D0%BE-%D0%BE%D1%84%D0%BE%D1%80%D0%BC%D0%BB%D1%8F%D1%82%D1%8C-pull-request-%D1%8B-%D0%B8-%D0%BA%D0%BE%D0%BC%D0%BC%D0%B8%D1%82%D1%8B/"},{"categories":["Development","Golang"],"content":"Недавно довелось столкнуться с необходимостью отладки (запуска дебагера) программы, которая работает в Docker-контейнере внутри Vagrant’а. Как оказалось, сделать это достаточно просто. Далее будет небольшая инструкция, как этого добиться. Недавно довелось столкнуться с необходимостью отладки (запуска дебагера) программы, которая работает в Docker-контейнере внутри Vagrant’а. Как оказалось, сделать это достаточно просто. Далее будет небольшая инструкция, как этого добиться. Для удалённой отладки Goland предлагает использовать Delve. Поэтому, устанавливаем его. Выполняем команду: dlv debug --headless --listen=:1234 --api-version=2 Эта команда компилирует программу с отключением оптимизации, запускает и прикрепляет к ней дебагер. Дебагер запускается в не интерактивном режиме и слушает порт 1234 Есть альтернативный способ. Компилируем программу следующим образом: go build -gcflags \"all=-N -l\" github.com/app/demo (для Go версии 1.10+) либо: go build -gcflags \"-N -l\" github.com/app/demo В Goland заходим в настройки конфигурации запуска (Run/Debug Configuration): Добавляем новую конфигурацию: Go Remote Указываем host vagrant’а и порт, который использовали при запуске Delve (п. 2). Сохраняем, закрываем настройки Запускаем режим дебага в Goland (Run → Debug). После этого будет непосредственно запущена программа, и теперь к ней можно обращаться обычным образом (например, из браузера). Пример команды, запускающей таким образом программу внутри докера: docker run --name your_programm -p 8080:8080 -p 6789:6789 -v \"$PWD\":/your_package_name -e GOPATH=/your_gopath -w /your_package_name golang:1.10 bash -c \"go build -gcflags='all=-N -l' your_package_name \u0026\u0026 ./bin/dlv --listen=:6789 --headless=true --api-version=2 exec ./your_programm\" Обратите внимание, что тут указывается два порта - для обычных запросов к программе (8080) и для delve (6789). Не забываем указать актуальный путь к dlv (в моём случае: ./bin/dlv). ","date":"2018-08-03","objectID":"/posts/%D1%83%D0%B4%D0%B0%D0%BB%D0%B5%D0%BD%D0%BD%D0%B0%D1%8F-%D0%BE%D1%82%D0%BB%D0%B0%D0%B4%D0%BA%D0%B0-golang/:0:0","tags":["Debug"],"title":"Удалённая отладка Golang","uri":"/posts/%D1%83%D0%B4%D0%B0%D0%BB%D0%B5%D0%BD%D0%BD%D0%B0%D1%8F-%D0%BE%D1%82%D0%BB%D0%B0%D0%B4%D0%BA%D0%B0-golang/"},{"categories":null,"content":"Я довольно много времени потратил на поиски полезных и интересных ресурсов, которые так или иначе помогали бы с изучением английского языка, перепробовал большое количество различных интересных и не очень сервисов. Что-то прижилось, а что-то нет. Здесь я хочу рассказать о тех из них, которые прижились очень хорошо. Я пользуюсь ими теперь регулярно. Кстати, почти все нижеперечисленные ресурсы поддерживают множество языков, не только английский ","date":"2016-09-18","objectID":"/posts/%D0%BF%D0%BE%D0%BB%D0%B5%D0%B7%D0%BD%D1%8B%D0%B5-%D1%81%D0%B5%D1%80%D0%B2%D0%B8%D1%81%D1%8B-%D0%B4%D0%BB%D1%8F-%D0%B8%D0%B7%D1%83%D1%87%D0%B5%D0%BD%D0%B8%D0%B5-%D0%B0%D0%BD%D0%B3%D0%BB%D0%B8%D0%B9%D1%81%D0%BA%D0%BE%D0%B3%D0%BE-%D1%8F%D0%B7%D1%8B%D0%BA%D0%B0/:0:0","tags":["Английский язык","Изучение языков","Образование"],"title":"Полезные сервисы для изучения английского языка","uri":"/posts/%D0%BF%D0%BE%D0%BB%D0%B5%D0%B7%D0%BD%D1%8B%D0%B5-%D1%81%D0%B5%D1%80%D0%B2%D0%B8%D1%81%D1%8B-%D0%B4%D0%BB%D1%8F-%D0%B8%D0%B7%D1%83%D1%87%D0%B5%D0%BD%D0%B8%D0%B5-%D0%B0%D0%BD%D0%B3%D0%BB%D0%B8%D0%B9%D1%81%D0%BA%D0%BE%D0%B3%D0%BE-%D1%8F%D0%B7%D1%8B%D0%BA%D0%B0/"},{"categories":null,"content":"LinguaLeo.com Начнем с моего любимого сайта для изучения английского языка. Думаю, о нём и так многие уже слышали, но всё же. Тут есть практически всё, как для изучения языка с нуля, так и для практики различных языковых навыков. Лично меня он привлек в первую очередь своим набором упражнений на запоминание слов. Всё просто — составляешь себе словарь, а сайт помогает тебе их выучить. В составлении словаря неплохо помогает плагин LinguaLeo для браузера. Принцип его действия прост: встречаешь на каком-нибудь сайте незнакомое слово/фразу, кликаешь по нему (например, с зажатой клавишей Alt), плагин показывает несколько вариантов перевода, ну и позволяет добавить это слово/фразу в свой словарь для тренировки. Кроме прочего, на сайте имеется множество материалов для практики — тексты, видео, музыка. Есть и упражнения на грамматику. Ну и забавная система мотивации тоже присутствует, куда ж сейчас без этого. В общем, шикарная штука, мне в свое время этот сайт очень помог сделать серьезный скачок в изучении английского. ","date":"2016-09-18","objectID":"/posts/%D0%BF%D0%BE%D0%BB%D0%B5%D0%B7%D0%BD%D1%8B%D0%B5-%D1%81%D0%B5%D1%80%D0%B2%D0%B8%D1%81%D1%8B-%D0%B4%D0%BB%D1%8F-%D0%B8%D0%B7%D1%83%D1%87%D0%B5%D0%BD%D0%B8%D0%B5-%D0%B0%D0%BD%D0%B3%D0%BB%D0%B8%D0%B9%D1%81%D0%BA%D0%BE%D0%B3%D0%BE-%D1%8F%D0%B7%D1%8B%D0%BA%D0%B0/:1:0","tags":["Английский язык","Изучение языков","Образование"],"title":"Полезные сервисы для изучения английского языка","uri":"/posts/%D0%BF%D0%BE%D0%BB%D0%B5%D0%B7%D0%BD%D1%8B%D0%B5-%D1%81%D0%B5%D1%80%D0%B2%D0%B8%D1%81%D1%8B-%D0%B4%D0%BB%D1%8F-%D0%B8%D0%B7%D1%83%D1%87%D0%B5%D0%BD%D0%B8%D0%B5-%D0%B0%D0%BD%D0%B3%D0%BB%D0%B8%D0%B9%D1%81%D0%BA%D0%BE%D0%B3%D0%BE-%D1%8F%D0%B7%D1%8B%D0%BA%D0%B0/"},{"categories":null,"content":"Memrise Функционал данного ресурса очень похож на тренировку слов LinguaLeo, но его фишка в том, что он полностью заточен на запоминание слов разных языков (выбор языков, кстати, очень большой). Я провел на нём очень много времени, когда изучал с нуля некоторые языки (французский, испанский), а в плане английского мне хватает LinguaLeo, но это уже дело вкуса. ","date":"2016-09-18","objectID":"/posts/%D0%BF%D0%BE%D0%BB%D0%B5%D0%B7%D0%BD%D1%8B%D0%B5-%D1%81%D0%B5%D1%80%D0%B2%D0%B8%D1%81%D1%8B-%D0%B4%D0%BB%D1%8F-%D0%B8%D0%B7%D1%83%D1%87%D0%B5%D0%BD%D0%B8%D0%B5-%D0%B0%D0%BD%D0%B3%D0%BB%D0%B8%D0%B9%D1%81%D0%BA%D0%BE%D0%B3%D0%BE-%D1%8F%D0%B7%D1%8B%D0%BA%D0%B0/:2:0","tags":["Английский язык","Изучение языков","Образование"],"title":"Полезные сервисы для изучения английского языка","uri":"/posts/%D0%BF%D0%BE%D0%BB%D0%B5%D0%B7%D0%BD%D1%8B%D0%B5-%D1%81%D0%B5%D1%80%D0%B2%D0%B8%D1%81%D1%8B-%D0%B4%D0%BB%D1%8F-%D0%B8%D0%B7%D1%83%D1%87%D0%B5%D0%BD%D0%B8%D0%B5-%D0%B0%D0%BD%D0%B3%D0%BB%D0%B8%D0%B9%D1%81%D0%BA%D0%BE%D0%B3%D0%BE-%D1%8F%D0%B7%D1%8B%D0%BA%D0%B0/"},{"categories":null,"content":"Duolingo Отличный и качественный сервис для практики языка на первых порах. Очень приятный интерфейс и полное отсутствие платного функционала. ","date":"2016-09-18","objectID":"/posts/%D0%BF%D0%BE%D0%BB%D0%B5%D0%B7%D0%BD%D1%8B%D0%B5-%D1%81%D0%B5%D1%80%D0%B2%D0%B8%D1%81%D1%8B-%D0%B4%D0%BB%D1%8F-%D0%B8%D0%B7%D1%83%D1%87%D0%B5%D0%BD%D0%B8%D0%B5-%D0%B0%D0%BD%D0%B3%D0%BB%D0%B8%D0%B9%D1%81%D0%BA%D0%BE%D0%B3%D0%BE-%D1%8F%D0%B7%D1%8B%D0%BA%D0%B0/:3:0","tags":["Английский язык","Изучение языков","Образование"],"title":"Полезные сервисы для изучения английского языка","uri":"/posts/%D0%BF%D0%BE%D0%BB%D0%B5%D0%B7%D0%BD%D1%8B%D0%B5-%D1%81%D0%B5%D1%80%D0%B2%D0%B8%D1%81%D1%8B-%D0%B4%D0%BB%D1%8F-%D0%B8%D0%B7%D1%83%D1%87%D0%B5%D0%BD%D0%B8%D0%B5-%D0%B0%D0%BD%D0%B3%D0%BB%D0%B8%D0%B9%D1%81%D0%BA%D0%BE%D0%B3%D0%BE-%D1%8F%D0%B7%D1%8B%D0%BA%D0%B0/"},{"categories":null,"content":"Italki Основная идея сайта — покупка уроков у носителей языка. Я пару раз покупал, мне понравилось. Но прелесть сайта не только в этом. Здесь можно искать “языковых партнеров”. Это люди, которые изучают твой язык. Находите друг друга, договариваетесь о разговоре по скайпу, практикуетесь (а они практикуют русский, например). ","date":"2016-09-18","objectID":"/posts/%D0%BF%D0%BE%D0%BB%D0%B5%D0%B7%D0%BD%D1%8B%D0%B5-%D1%81%D0%B5%D1%80%D0%B2%D0%B8%D1%81%D1%8B-%D0%B4%D0%BB%D1%8F-%D0%B8%D0%B7%D1%83%D1%87%D0%B5%D0%BD%D0%B8%D0%B5-%D0%B0%D0%BD%D0%B3%D0%BB%D0%B8%D0%B9%D1%81%D0%BA%D0%BE%D0%B3%D0%BE-%D1%8F%D0%B7%D1%8B%D0%BA%D0%B0/:4:0","tags":["Английский язык","Изучение языков","Образование"],"title":"Полезные сервисы для изучения английского языка","uri":"/posts/%D0%BF%D0%BE%D0%BB%D0%B5%D0%B7%D0%BD%D1%8B%D0%B5-%D1%81%D0%B5%D1%80%D0%B2%D0%B8%D1%81%D1%8B-%D0%B4%D0%BB%D1%8F-%D0%B8%D0%B7%D1%83%D1%87%D0%B5%D0%BD%D0%B8%D0%B5-%D0%B0%D0%BD%D0%B3%D0%BB%D0%B8%D0%B9%D1%81%D0%BA%D0%BE%D0%B3%D0%BE-%D1%8F%D0%B7%D1%8B%D0%BA%D0%B0/"},{"categories":null,"content":"Ororo.tv и Puzzle-English Просмотр фильмов, сериалов, передач на английском с субтитрами. Можно ставить двойные субтитры (сразу русский и английский), замедлять видео, наводить в субтитрах на отдельные слова, что бы сразу получить перевод, и многое другое. В общем, у них удобный интерфейс для изучения языка через просмотр видео. Puzzle-English часто вставляет видео-объяснения особо сложных слов/фраз (работает по клику), а на Ororo.tv выбор контента намного больше. ","date":"2016-09-18","objectID":"/posts/%D0%BF%D0%BE%D0%BB%D0%B5%D0%B7%D0%BD%D1%8B%D0%B5-%D1%81%D0%B5%D1%80%D0%B2%D0%B8%D1%81%D1%8B-%D0%B4%D0%BB%D1%8F-%D0%B8%D0%B7%D1%83%D1%87%D0%B5%D0%BD%D0%B8%D0%B5-%D0%B0%D0%BD%D0%B3%D0%BB%D0%B8%D0%B9%D1%81%D0%BA%D0%BE%D0%B3%D0%BE-%D1%8F%D0%B7%D1%8B%D0%BA%D0%B0/:5:0","tags":["Английский язык","Изучение языков","Образование"],"title":"Полезные сервисы для изучения английского языка","uri":"/posts/%D0%BF%D0%BE%D0%BB%D0%B5%D0%B7%D0%BD%D1%8B%D0%B5-%D1%81%D0%B5%D1%80%D0%B2%D0%B8%D1%81%D1%8B-%D0%B4%D0%BB%D1%8F-%D0%B8%D0%B7%D1%83%D1%87%D0%B5%D0%BD%D0%B8%D0%B5-%D0%B0%D0%BD%D0%B3%D0%BB%D0%B8%D0%B9%D1%81%D0%BA%D0%BE%D0%B3%D0%BE-%D1%8F%D0%B7%D1%8B%D0%BA%D0%B0/"},{"categories":null,"content":"WordsFromText Незаменимый инструмент. Суть такова: добавляешь сюда текст на английском, он вытаскивает оттуда все слова по отдельности, формирует список. Далее придется чуток поработать – сидеть и отмечать, какие слова из этого списка тебе уже знакомы, а какие нет (конечно же, с каждым разом этим придется заниматься всё меньше, по мере того, как на сайте копится информация об известных вам словах). Затем все незнакомые слова отправляешь на изучение в LinguaLeo или Memrise. После того как все слова из текста будут знакомы, можно приступать к чтению. Например, так удобно читать книги в оригинале. Сайт умеет работать с файлами субтитров. В последнее время я им почти не пользовался, но мельком видел, что функционал сайта постоянно растёт. На этом пока всё. Конечно, это далеко не полный список ресурсов, которые я находил, но остальные мне не очень понравились. Если найду ещё что-нибудь стоящее, буду обновлять этот пост. ","date":"2016-09-18","objectID":"/posts/%D0%BF%D0%BE%D0%BB%D0%B5%D0%B7%D0%BD%D1%8B%D0%B5-%D1%81%D0%B5%D1%80%D0%B2%D0%B8%D1%81%D1%8B-%D0%B4%D0%BB%D1%8F-%D0%B8%D0%B7%D1%83%D1%87%D0%B5%D0%BD%D0%B8%D0%B5-%D0%B0%D0%BD%D0%B3%D0%BB%D0%B8%D0%B9%D1%81%D0%BA%D0%BE%D0%B3%D0%BE-%D1%8F%D0%B7%D1%8B%D0%BA%D0%B0/:6:0","tags":["Английский язык","Изучение языков","Образование"],"title":"Полезные сервисы для изучения английского языка","uri":"/posts/%D0%BF%D0%BE%D0%BB%D0%B5%D0%B7%D0%BD%D1%8B%D0%B5-%D1%81%D0%B5%D1%80%D0%B2%D0%B8%D1%81%D1%8B-%D0%B4%D0%BB%D1%8F-%D0%B8%D0%B7%D1%83%D1%87%D0%B5%D0%BD%D0%B8%D0%B5-%D0%B0%D0%BD%D0%B3%D0%BB%D0%B8%D0%B9%D1%81%D0%BA%D0%BE%D0%B3%D0%BE-%D1%8F%D0%B7%D1%8B%D0%BA%D0%B0/"}]